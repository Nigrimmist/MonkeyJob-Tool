<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="closeTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="IconPic.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAADjAAAA4wEP5t+nAAAAGXRFWHRTb2Z0d2FyZQB3d3cu
        aW5rc2NhcGUub3Jnm+48GgAAA2FJREFUWEet10loFEEUxvGKcYuYRDGQxC2QRZGg3hQ9iImJKNFDPIgg
        griBuJCLIuopHiKCioKK6CF6EIlLBEFyU/QmKigERdxQXHED93X8f5OuoabnOZhxHvxI9avqetMzXdUd
        l0gk+oUYiKlYgYMRtaeg0DonGzNpIYZjP75ACctn7MYwaw6LmYwj5uIRwmLZ3EOjNVecmQwR7dGkudhq
        zRkykx7Rgt/RZLn4hSZrbs9MCjEWrxFOmIsXqLBqiJkU4lI0QT70WDXETjo3MTj5OZajGLNwAC/h+8Nx
        WiUzUILVeAXfX2XWMpPObQlOnGn0j8CtqF+uodgY1xT1S1u8PznGTDp3NTrpitUvxGg8xG2UWWOE8B/0
        stmfajhXgAlohb/zu8LBcUQdxll9HnEBamhFLIRqFKT6o0EN0NXoINTtB+aK6Anm81SrIep39fiGXqzF
        OviBb5Ha34kinMBpjAzyZTiH4xgc5AfhA/x8q6AaqqWaqu268RGjsB7b4U+Q2cGE+gp9fmWQ1x3v881B
        fl6Ql53QiiqFaqp2ckkdwQD4my/UEUyoD6mb6g5Sy4qowV3cQGmQ3ws/j3cm6lNN1XaPkfytCa11fSo/
        +DqG+An7i9BPdhN+PhVN/kSE6qi268RP1EYdVVDjParDCXNB6K7XfaAaJVGuNjpWbVcB7VhfcQyHoFGt
        8ck8YhLGB8cqUh+OCRFLoMY+qIZq6euv8AP04DkLXbUS5+OThAjdxVoh2rInQ1fYa431iItQ4x1OYUwy
        Hxs0FNqENoX5OGIN1NgDPRvUXmaN9Qi9V/xA2mtbfFA11FgQ5i2ENi/9fOWYbo0JEYuhRvLKU/m0g74X
        SzWmhfl8IPQkVaMuLZ92wO4WDXoDvUjkk+4ZzV2UVjM8SCacewptKh159gD3M+plJJzbBS2T1DL7X4R2
        yu9oz+jLSPQN1rLqjPflijgJLfGMi0o7SCWdWwTtVEut/v4g9F+T5mox+62kEDugPWGj1f8viM1QY5vV
        L2ZSCD0d9dXp4ChqrHEWQluztlwd6G/qDSjOTIaI+dDWq6+xC3NQaYyrRDO0pev1S4/trP+UiJmMIwqh
        N5lnUEL0QqFHrXyKcvIEekEZYM0VZyazIbT96nW7DXq+H8YGNKLcOufvEu4Pl5a2DOkSu60AAAAASUVO
        RK5CYII=
</value>
  </data>
</root>